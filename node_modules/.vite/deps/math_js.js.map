{
  "version": 3,
  "sources": ["../../math.js/lib/utils/index.js", "../../math.js/lib/statistics/index.js", "../../math.js/lib/probability/index.js", "../../math.js/lib/arithmetic/index.js", "../../math.js/lib/constants.js", "../../math.js/lib/unit/index.js", "../../math.js/lib/trigonometric/index.js", "../../math.js/lib/index.js", "../../math.js/index.js", "dep:math_js"],
  "sourcesContent": ["module.exports = {\n    isPrime: function(n) {\n        for (var i = 2 ; i < n ; i++) {\n            if (n % i === 0) {\n                return false;\n            }\n        }\n        return n > 1;\n    },\n\n    isEven: function(n) {\n        return n % 2 === 0;\n    },\n\n    isOdd: function(n) {\n        return !this.isEven(n);\n    },\n\n    format: function(val, decimals) {\n        return ( val.toFixed(decimals) )/1;\n    },\n\n    dropFirstDigit: function(n) {\n        return Number(n.toString().substring(1));\n    },\n\n    dropLastDigit: function(n) {\n        return Number(n.toString().substring(0, n.toString().length-1));\n    },\n\n    dropDigit: function(n, pos) {\n        return Number(n.toString().substring(0, pos-1).concat(n.toString().substring(pos, n)));\n    }\n};\n", "module.exports = {\n\n    minElement: function(arr) {\n        return Math.min.apply(null, arr);\n    },\n\n    maxElement: function(arr) {\n        return Math.max.apply(null, arr);\n    },\n\n    between: function (val, min, max) {\n        return min<=val==val<=max;\n    }\n}\n", "module.exports = {\n\n    random: function() {\n        return Math.random();\n    },\n\n    randomElement: function(arr) {\n        return arr[Math.floor(Math.random() * arr.length)];\n    },\n\n    factorial: function(n) {\n        return n * (n-1);\n    }\n};\n", "module.exports = {\r\n\r\n    ceil: function(val) {\r\n        return Math.ceil(val / 10) * 10;\r\n    },\r\n\r\n    round: function(n) {\r\n        return Math.round(n);\r\n    },\r\n\r\n    fround: function(n) {\r\n        return Math.fround(n)\r\n    },\r\n\r\n    /**\r\n     * Returns the largest integer less than or equal to the given number.\r\n     * @param n\r\n     * @returns {number}\r\n     */\r\n    floor: function(n) {\r\n        return Math.floor(n);\r\n    },\r\n\r\n    sign: function(n) {\r\n        return Math.sign(n);\r\n    },\r\n\r\n    abs: function(n) {\r\n        return Math.abs(n)\r\n    },\r\n\r\n    imul: function(a, b) {\r\n        return Math.imul(a, b);\r\n    },\r\n\r\n    pow: function(base, exp) {\r\n        return Math.pow(base, exp);\r\n    },\r\n\r\n    square: function(val) {\r\n        return val * val;\r\n    },\r\n\r\n    cube: function(val) {\r\n        return val * val * val;\r\n    },\r\n\r\n    sqrt: function(n) {\r\n        return Math.sqrt(n);\r\n    },\r\n\r\n    cbrt: function (n) {\r\n        return Math.cbrt(n);\r\n    },\r\n\r\n    exp: function (n) {\r\n        return Math.exp(n);\r\n    },\r\n\r\n    expm1: function(n) {\r\n        return Math.expm1(n);\r\n    },\r\n\r\n    trunc: function(n) {\r\n        return Math.trunc(n);\r\n    },\r\n\r\n    greatestCommonDivisor: function gcd(x, y) {\r\n        var remainder = x % y;\r\n        if (remainder === 0) {\r\n            return y;\r\n        }\r\n\r\n        return gcd(y, remainder);\r\n    },\r\n\r\n    log: function (n) {\r\n        return Math.log(n);\r\n    },\r\n\r\n    log2: function (n) {\r\n        return Math.log2(n);\r\n    },\r\n\r\n    log10: function (n) {\r\n        return Math.log10(n);\r\n    },\r\n\r\n    log1p: function(n) {\r\n        return Math.log1p(n);\r\n    },\r\n\r\n    hypot: function(...arr) {\r\n        return Math.hypot(...arr);\r\n    }, \r\n\r\n    /**\r\n     * Performs ceil in the n decimal digit of num\r\n     * @param num\r\n     * @param n\r\n     * @returns {number}\r\n     */\r\n    dCeil: function(num, n) {\r\n        let multiplyValue = Math.pow(10, n);\r\n        console.log('dCeil', num, n, multiplyValue, Math.ceil(num / multiplyValue) * multiplyValue)\r\n        return Math.ceil(num * multiplyValue) / multiplyValue;\r\n    },\r\n\r\n    /**\r\n     * Performs round in the n decimal digit of num\r\n     * @param num\r\n     * @param n\r\n     * @returns {number}\r\n     */\r\n    dRound: function(num, n) {\r\n        let multiplyValue = Math.pow(10, n);\r\n        return Math.round(num * multiplyValue) / multiplyValue;\r\n    },\r\n\r\n    /**\r\n     * Performs floor in the n decimal digit of num\r\n     * @param num\r\n     * @param n\r\n     * @returns {number}\r\n     */\r\n    dFloor: function(num, n) {\r\n        let multiplyValue = Math.pow(10, n);\r\n        return Math.floor(num * multiplyValue) / multiplyValue;\r\n    },\r\n\r\n    /**\r\n     * Performs trunc in the n decimal digit of num\r\n     * @param num\r\n     * @param n\r\n     * @returns {number}\r\n     */\r\n    dTrunc: function(num, n) {\r\n        let multiplyValue = Math.pow(10, n);\r\n        return Math.trunc(num * multiplyValue) / multiplyValue;\r\n    }\r\n\r\n};\r\n", "/**\n * A constants class to maintain all the fixed variables.\n * @type {Object}\n */\nmodule.exports = Object.freeze({\n    /**\n     * Built-in constants.\n     */\n    PI: Math.PI,\n    E: Math.E,\n    LN10: Math.LN10,\n    LN2: Math.LN2,\n    LOG10E: Math.LOG10E,\n    LOG2E: Math.LOG2E,\n    SQRT1_2: Math.SQRT1_2,\n    SQRT2: Math.SQRT2,\n\n\n    /**\n     * Unit converter constants.\n     */\n    FEET_TO_INCHES_FACTOR:  12,\n    FEET_TO_METERS_FACTOR: 0.3048,\n    FEET_TO_MILES_FACTOR: 1 / 5280,\n    FEET_TO_YARDS_FACTOR: 1 / 3,\n    INCHES_TO_FEET_FACTOR: 1 / 12,\n    INCHES_TO_METERS_FACTOR: 0.0254,\n    INCHES_TO_MILES_FACTOR: 1 / 63360,\n    INCHES_TO_YARDS_FACTOR: 1 / 36,\n    MILES_TO_FEET_FACTOR: 5280,\n    MILES_TO_INCHES_FACTOR: 63360,\n    MILES_TO_METERS_FACTOR: 1609.344,\n    MILES_TO_YARDS_FACTOR: 1760,\n    YARDS_TO_INCHES_FACTOR: 36,\n    YARDS_TO_FEET_FACTOR: 3,\n    YARDS_TO_METERS_FACTOR: 0.9144,\n    YARDS_TO_MILES_FACTOR: 1 / 1760,\n    CELSIUS_TO_FAHRENEIT_MUTLIPLIER_FACTOR: 9 / 5,\n    CELSIUS_TO_FAHRENEIT_FACTOR: 32\n\n\n});\n", "var constants = require('../constants');\nmodule.exports = {\n\n    // Unit converters\n    yardsToFeet: function(n) {\n        return n * constants.YARDS_TO_FEET_FACTOR;\n    },\n\n    feetToYards: function(n) {\n        return n * constants.FEET_TO_YARDS_FACTOR;\n    },\n\n    yardsToInches: function(n) {\n        return n * constants.YARDS_TO_INCHES_FACTOR;\n    },\n\n    inchesToYards: function(n) {\n        return constants.INCHES_TO_YARDS_FACTOR * n;\n    },\n\n    inchesToMiles: function(n) {\n        return constants.INCHES_TO_MILES_FACTOR * n;\n    },\n\n    feetToInches: function(n) {\n        return constants.FEET_TO_INCHES_FACTOR * n;\n    },\n\n    feetToMeters: function (n) {\n        return constants.FEET_TO_METERS_FACTOR * n;\n    },\n\n    feetToMiles: function(n) {\n        return constants.FEET_TO_MILES_FACTOR * n;\n    },\n\n    inchesToFeet: function(n) {\n        return constants.INCHES_TO_FEET_FACTOR * n;\n    },\n\n    inchesToMeters: function(n) {\n        return constants.INCHES_TO_METERS_FACTOR * n;\n    },\n\n    milesToYards: function(n) {\n        return constants.MILES_TO_YARDS_FACTOR * n;\n    },\n\n    milesToMeters: function(n) {\n        return constants.MILES_TO_METERS_FACTOR * n;\n    },\n\n    milesToInches: function(n) {\n        return constants.MILES_TO_INCHES_FACTOR * n;\n    },\n\n    milesToFeet: function(n) {\n        return constants.MILES_TO_FEET_FACTOR * n;\n    },\n\n    yardsToMiles: function(n) {\n        return constants.YARDS_TO_MILES_FACTOR * n;\n    },\n\n    yardsToMeters: function(n) {\n        return constants.YARDS_TO_METERS_FACTOR * n;\n    },\n\n    toFahrenheit: function(val) {\n        return val * constants.CELSIUS_TO_FAHRENEIT_MUTLIPLIER_FACTOR + constants.CELSIUS_TO_FAHRENEIT_FACTOR;\n    },\n\n    toCelsius: function(val) {\n        return (val - constants.CELSIUS_TO_FAHRENEIT_FACTOR) / constants.CELSIUS_TO_FAHRENEIT_MUTLIPLIER_FACTOR;\n    },\n\n};\n", "module.exports = {\n// Trigonometric functions\n    sin: function (n) {\n        return Math.sin(n);\n    },\n\n    cos: function (n) {\n        return Math.cos(n);\n    },\n\n    tan: function (n) {\n        return Math.tan(n);\n    },\n\n    acos: function (n) {\n        return Math.acos(n);\n    },\n\n    asin: function (n) {\n        return Math.asin(n);\n    },\n\n    acosh: function (n) {\n        return Math.acosh(n);\n    },\n\n    atan: function (n) {\n        return Math.atan(n);\n    },\n\n    /**\n     * Arc tangent of two numbers. Both arguments are used to determine the quadrant of the result.\n     * @param y\n     * @param x\n     * @returns {number} an angle expressed in radians\n     */\n    atan2: function (y, x) {\n        return Math.atan2(y, x);\n    }\n\n};\n", "module.exports = Object.assign({},\n    require('./utils'),\n    require('./statistics'),\n    require('./probability'),\n    require('./arithmetic'),\n    require('./unit'),\n    require('./trigonometric')\n);\n", "module.exports= require('./lib');\n", "export default require(\"./node_modules/math.js/index.js\");"],
  "mappings": "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",
  "names": []
}
